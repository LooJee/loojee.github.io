<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>design-pattern - Tag - chit-chat</title>
        <link>https://loojee.github.io/tags/design-pattern/</link>
        <description>design-pattern - Tag - chit-chat</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>&amp;copy;2019~time.Now(), All Rights Reserved</copyright><lastBuildDate>Thu, 25 Mar 2021 15:06:14 &#43;0800</lastBuildDate><atom:link href="https://loojee.github.io/tags/design-pattern/" rel="self" type="application/rss+xml" /><item>
    <title>Design Pattern With Go: Factory</title>
    <link>https://loojee.github.io/posts/design-pattern-with-go-factory/</link>
    <pubDate>Thu, 25 Mar 2021 15:06:14 &#43;0800</pubDate>
    <author>Loojee</author>
    <guid>https://loojee.github.io/posts/design-pattern-with-go-factory/</guid>
    <description><![CDATA[这次介绍的设计模式是工厂模式，这是一个比较常见的创建型模式。一般情况下，工厂模式分为三种：简单工厂、工厂方法和抽象工厂，下面慢慢举例介绍下。]]></description>
</item>
<item>
    <title>Design Pattern With Go: Singleton</title>
    <link>https://loojee.github.io/posts/design-pattern-with-go-singleton/</link>
    <pubDate>Mon, 22 Mar 2021 11:58:09 &#43;0800</pubDate>
    <author>Loojee</author>
    <guid>https://loojee.github.io/posts/design-pattern-with-go-singleton/</guid>
    <description><![CDATA[定义 一个类只允许创建一个对象（或者实例），那这个类就是一个单例类，这种设计模式就叫作单例模式。当某些数据只需要在系统中保留一份的时候，可以选]]></description>
</item>
</channel>
</rss>
